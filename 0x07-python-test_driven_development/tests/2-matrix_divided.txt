==========================
Matrx Divided Function
==========================

''def matrix_divided(matrix, div):'' divide each
elelemt of the matrix is divided by div and
return a new matrix with the results with a 2
precision numbers. If div not is a number raise
TypeError or ZeroDivisionError if div is 0:

If matrix not is a list of lists return TypeError.
If some sub-list aren't a list return TypeError.
If some element of some sub-list aren't integer
or float number return TypeError.

Import the function
=================================================================
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

==========================
Type Error
==========================

Error for matrix
=================================================================
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided(matrix, 8)
	[[0.12, 0.25, 0.38], [0.5, 0.62, 0.75]]

	>>> matrix = [23, 44, "hola"]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = [[23, 44], ["hola", "papu"]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = [[23, 44, 55], [15, 12]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size


	>>> matrix = [[23, 44, "paps"], [1, 2]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = [[5.5, 4.5, 2.5], [1.5, 4.5, 3.5]]
	>>> matrix_divided(matrix, 3)
	[[1.83, 1.5, 0.83], [0.5, 1.5, 1.17]]


	>>> matrix = [[5.5, 12, 2.5], [1.5, 4, 3.5]]
	>>> matrix_divided(matrix, 3)
	[[1.83, 4.0, 0.83], [0.5, 1.33, 1.17]]


	>>> matrix = "hola"
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = {1: 25}
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix = []
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats


	>>> matrix_divided(None, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Div Errors
==========================

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, None)
	Traceback (most recent call last):
	TypeError: div must be a number


	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, [5])
	Traceback (most recent call last):
	TypeError: div must be a number


	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, {1: 5})
	Traceback (most recent call last):
	TypeError: div must be a number


	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "Hola")
	Traceback (most recent call last):
	TypeError: div must be a number


	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero